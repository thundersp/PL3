// server.js
const express = require('express');
const multer = require('multer');
const cors = require('cors');
const path = require('path');

const app = express();
app.use(cors());

const storage = multer.diskStorage({
  destination: './uploads/',
  filename: function(req, file, cb) {
    cb(null, file.fieldname + '-' + Date.now() + path.extname(file.originalname));
  }
});

const upload = multer({
  storage: storage,
  limits: { fileSize: 10000000 }, // 10MB limit
  fileFilter: function(req, file, cb) {
    checkFileType(file, cb);
  }
});

function checkFileType(file, cb) {
  const filetypes = /jpeg|jpg|png|gif/;
  const extname = filetypes.test(path.extname(file.originalname).toLowerCase());
  const mimetype = filetypes.test(file.mimetype);

  if (mimetype && extname) {
    return cb(null, true);
  } else {
    cb('Error: Images Only!');
  }
}

app.post('/upload', upload.single('file'), (req, res) => {
  if (req.file) {
    res.json({
      success: true,
      file: req.file.filename
    });
  } else {
    res.status(400).json({
      success: false,
      error: 'No file uploaded'
    });
  }
});

app.listen(5000, () => console.log('Server running on port 5000'));


// FileUpload.js
import React, { useState } from 'react';
import axios from 'axios';
import './FileUpload.css';

const FileUpload = () => {
  const [file, setFile] = useState('');
  const [uploadProgress, setUploadProgress] = useState(0);
  const [message, setMessage] = useState('');

  const onChange = e => {
    setFile(e.target.files[0]);
  };

  const onSubmit = async e => {
    e.preventDefault();
    const formData = new FormData();
    formData.append('file', file);

    try {
      const res = await axios.post('http://localhost:5000/upload', formData, {
        headers: {
          'Content-Type': 'multipart/form-data'
        },
        onUploadProgress: progressEvent => {
          setUploadProgress(
            parseInt(Math.round((progressEvent.loaded * 100) / progressEvent.total))
          );
        }
      });

      setMessage('File uploaded successfully');
      setTimeout(() => setUploadProgress(0), 3000);
    } catch (err) {
      setMessage(err.response?.data?.error || 'Error uploading file');
      setUploadProgress(0);
    }
  };

  return (
    <div className="upload-container">
      <h2>File Upload</h2>
      {message && <div className="message">{message}</div>}
      <form onSubmit={onSubmit}>
        <div className="custom-file">
          <input
            type="file"
            className="custom-file-input"
            id="customFile"
            onChange={onChange}
          />
        </div>
        {uploadProgress > 0 && (
          <div className="progress">
            <div
              className="progress-bar"
              role="progressbar"
              style={{ width: `${uploadProgress}%` }}
            >
              {uploadProgress}%
            </div>
          </div>
        )}
        <input
          type="submit"
          value="Upload"
          className="btn"
          disabled={!file}
        />
      </form>
    </div>
  );
};

export default FileUpload;
/* FileUpload.css */
.upload-container {
  max-width: 500px;
  margin: 2rem auto;
  padding: 2rem;
  border-radius: 5px;
  box-shadow: 0 0 10px rgba(0,0,0,0.1);
}

.custom-file {
  margin-bottom: 1rem;
}

.btn {
  display: block;
  width: 100%;
  padding: 0.75rem;
  background: #007bff;
  color: white;
  border: none;
  border-radius: 3px;
  cursor: pointer;
}

.btn:disabled {
  background: #cccccc;
}

.progress {
  height: 20px;
  margin-bottom: 1rem;
  background: #f4f4f4;
  border-radius: 3px;
  overflow: hidden;
}

.progress-bar {
  height: 100%;
  background: #007bff;
  color: white;
  text-align: center;
  line-height: 20px;
}

.message {
  padding: 1rem;
  margin-bottom: 1rem;
  border-radius: 3px;
  background: #e9ecef;
}


# Backend
npm init -y
npm install express multer cors

# Frontend
npx create-react-app client
cd client
npm install axios

mkdir uploads